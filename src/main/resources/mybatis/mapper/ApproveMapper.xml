<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitedu.bipa.simplesignbackend.mapper.ApproveMapper">


    <!--결재문서삽입-->
   <insert id="insertApprovalDoc" parameterType="ApprovalDocReqDTO"  useGeneratedKeys="true" keyProperty="approvalDocId">
        insert into approval_doc (org_user_id, grade_name, position_name, form_code,form_name, approval_doc_title, contents,
            created_at, approval_count, doc_status, enforcement_date, doc_del_status, seq_code, approval_date)
        values (#{orgUserId}, #{gradeName}, #{positionName}, #{formCode}, #{formName}, #{approvalDocTitle}, #{contents},
            #{createdAt}, #{approvalCount}, #{docStatus}, #{enforcementDate}, 0, #{seqCode}, #{approvalDate});
   </insert>

    <!--결재라인 삽입-->
    <insert id="insertApprovalLine" parameterType="ApprovalLineDTO">
        insert into approval
            (approval_doc_id, approval_order, approval_status, org_user_id, grade_name, position_name, receive_date, approval_date)
        values(#{approvalDocId}, #{approvalOrder}, #{approvalStatus}, #{orgUserId}, #{gradeName}, #{positionName}, #{receiveDate}, #{approvalDate});
    </insert>

    <!--가장 최근 insert된 id 값 가져오기-->
    <select id="selectLastInserted">
        SELECT LAST_INSERT_ID();
    </select>

    <!--수신참조 삽입-->
    <insert id="insertReceivedRef" parameterType="ReceivedRefDTO">
        insert into received_ref (category, use_id, approval_doc_id, grade_name, position_name)
            values( #{category}, #{id}, #{approvalDocId}, #{gradeName}, #{positionName});
    </insert>

    <!--결재문서번호 삽입-->
    <insert id="insertProductNumber" parameterType="Map">
        insert into approval_doc (product_num) values(#{productNum})
            where approval_doc_id = #{approvalDocId};
    </insert>

    <!--결재승인-->

    <!--결재 가져오기-->
    <select id="selectApprovalByApprovalId" resultType="ApprovalResDTO" parameterType="Map">
        select approval_id, approval_doc_id, receive_date, approval_date, approval_order, approval_status,
                org_user_id, sign_file_id
        from approval
        where approval_doc_id = #{approvalDocId} and org_user_id = #{orgUserId};
    </select>

    <!--모든 결재라인 가져오기-->
    <select id="selectAllApproval" resultType="ApprovalResDTO" parameterType="int">
        select approval_id, approval_doc_id, receive_date, approval_date,
        approval_order, approval_status, grade_name, position_name, org_user_id
        from approval
        where approval_doc_id = #{approvalDocId};
    </select>

    <!--결재 승인하기-->
    <update id="updateCurrentApproval" parameterType="ApprovalResDTO">
        update approval
        set approval_status = #{approvalStatus}, approval_date = #{approvalDate}, sign_file_id = #{signFileId}
        where approval_id = #{approvalId} and org_user_id = #{orgUserId};
    </update>


    <!--결재문서의 총 결재개수 가져오기-->
    <select id="selectApprovalCount" parameterType="int" resultType="ApprovalDocResDTO">
        select approval_doc_id, approval_count, doc_status, seq_code, org_user_id
        from approval_doc
        where approval_doc_id = #{approvalDocId};
    </select>

    <!--결재문서 업데이트-->
    <update id="updateApprovalDoc" parameterType="ApprovalDocResDTO">
        update approval_doc
        set doc_status = #{docStatus}, product_num = #{productNum}, end_at = #{endAt}, version = #{version} + 1
        where approval_doc_id = #{approvalDocId} and version = #{version};
    </update>

    <!--상신 상위자 아이디 가져오기-->
    <select id="selectUpperApproverId" parameterType="ApprovalResDTO" resultType="ApprovalResDTO">
        select approval_id, org_user_id from approval
        where approval_doc_id = #{approvalDocId} and approval_order = #{approvalOrder}+1;
    </select>

    <!--결재 상신자 상태 업데이트하기-->
    <update id="updateUpperApproverId" parameterType="ApprovalResDTO">
        update approval
        set approval_status = #{approvalStatus}, receive_date = #{receiveDate}
        where approval_id = #{approvalId};
    </update>

    <!--결재문서 상신자 아이디 가져오기-->
    <select id="selectRecipientId" parameterType="int" resultType="int">
        select org_user_id from approval_doc where approval_doc_id = #{approvalDocId};
    </select>

    <!--수신참조 활성화 업데이트-->
    <update id="updateReceivedRefState" parameterType="int">
        update received_ref set active_state = 1
            where approval_doc_id = #{approvalDocId};
    </update>

    <!--하위결재자 아이디 리스트 가져오기-->

    <select id="selectLowerApproverId" parameterType="Map" resultType="int">
        <![CDATA[
            select org_user_id from approval where approval_doc_id = #{approvalDocId} and approval_order < #{approvalOrder};
        ]]>
    </select>

    <!--결재문서 상세조회-->
    <select id="selectApprovalDocById" parameterType="int" resultType="ApprovalDocDetailDTO">
        select approval_doc_id, t1.org_user_id, t3.user_name, t5.dept_name, approval_date, approval_doc_title, doc_status,
            contents, enforcement_date, product_num, t1.form_code, t4.form_name, t4.default_form, t1.seq_code, t6.seq_name, t1.version
        from approval_doc t1
            left join organization_user t2
            on t1.org_user_id = t2.org_user_id
            left join user t3
            on t2.user_id = t3.user_id
            left join form t4
            on t1.form_code = t4.form_code
            left join department t5
            on t2.dept_id = t5.dept_id
            left join sequence t6
            on t1.seq_code = t6.seq_code
        where approval_doc_id = #{approvalDocId} and doc_del_status = 0;

    </select>

    <select id="selectApprovalDetailLineByApprovalDocId" parameterType="int" resultType="ApprovalLineDetailListDTO">
        select t1.org_user_id as user_id, user_name as user, t4.comp_id, t4.comp_name as company , t5.est_id, t5.est_name as establishment,
        t2.dept_id, t6.dept_name as department, t7.position_name as position, t8.grade_name as grade, approval_order, approval_status, sign_state,
        sign_file_id,t1.approval_date
        from approval t1
        left join
        organization_user t2 on t1.org_user_id = t2.org_user_id
        left join
        user t3 on t2.user_id = t3.user_id
        left join
        company t4 on t2.comp_name = t4.comp_name
        left join
        establishment t5 on t2.est_name = t5.est_name
        left join
        department t6 on t2.dept_id = t6.dept_id
        left join
        position t7 on t2.position_code = t7.position_code
        left join
        grade t8 on t2.grade_code = t8.grade_code
        where approval_doc_id = #{approvalDocId};
    </select>

    <select id="selectApprovalLineByApprovalDocId" parameterType="int" resultType="ApprovalLineListDTO">
        select t1.org_user_id, user_name, approval_order, approval_status, approval_count
        from approval t1
            left join
            organization_user t2 on t1.org_user_id = t2.org_user_id
            left join
            user t3 on t2.user_id = t3.user_id
            left join
            approval_doc t4 on t1.approval_doc_id = t4.approval_doc_id
        where t1.approval_doc_id = #{approvalDocId};
    </select>

    <select id="selectReceivedRefList" parameterType="int" resultType="ApprovalLineDetailListDTO">
        select t1.use_id as userId, t3.user_name as user, t4.dept_id, t4.dept_name as department, t5.est_id, t5.est_name as establishment,
        t6.comp_id, t6.comp_name as company , t1.category
        from received_ref t1
        join organization_user t2
        on t1.use_id = t2.org_user_id
        join user t3
        on t2.user_id = t3.user_id
        join department t4
        on t2.dept_id = t4.dept_id
        join establishment t5
        on t5.est_name = t2.est_name
        join company t6
        on t6.comp_name = t2.comp_name
        where approval_doc_id = #{approvalDocId};
    </select>

    <!--활성화된 수신참조자 조회-->
    <select id="selectRecievedRefUserId" parameterType="int" resultType="int">
        select org_user_id from received_ref t1
            join organization_user t2
            on t1.use_id = t2.org_user_id
            where approval_doc_id = #{approvalDocId} and category = 'U' and active_state = 1
        union
            select distinct org_user_id
            from organization_user
            where dept_id = (select dept_id from received_ref t1
                            join
                            department t2 on t1.use_id = t2.dept_id
                            where approval_doc_id = #{approvalDocId} and category = 'D' and active_state = 1)
            or comp_name = (
                            select comp_name from received_ref t1
                            join
                            company t2 on t1.use_id = t2.comp_id
                            where approval_doc_id = #{approvalDocId} and category = 'C' and active_state = 1)
            or est_name = (
                            select est_name from received_ref t1
                            join
                            establishment t2 on t1.use_id = t2.est_id
                            where approval_doc_id = #{approvalDocId} and category = 'E' and active_state = 1) ;

    </select>

    <!--결재자 여부 확인-->
    <select id="selectUserCountByApprovalDoc" parameterType="Map" resultType="ApprovalOrderResDTO">
        select count(*) as count, approval_order from approval
        where approval_doc_id = #{approvalDocId} and org_user_id = #{orgUserId};
    </select>

    <!--결재문서 수정이 가능한지 확인-->
    <select id="selectApprovalDocStatus" parameterType="int" resultType="char">
        select doc_status from approval_doc
            where approval_doc_id = #{approvalDocId};
    </select>

    <select id="selectApprovalDocStatusAndVersion" parameterType="int" resultType="ApprovalDocResDTO">
        select doc_status, version from approval_doc
        where approval_doc_id = #{approvalDocId};
    </select>

    <select id="selectApprovalStatusList" parameterType="Map" resultType="char">
        <![CDATA[
            select approval_status from approval
            where approval_doc_id = #{approvalDocId}
            and approval_order > #{approvalOrder};
        ]]>
    </select>

    <!--결재문서 수정하기-->
    <update id="updateApprovalDocFromRequest" parameterType="ApprovalDocReqDTO">
        update approval_doc
        set approval_doc_title = #{approvalDocTitle}, contents = #{contents}, created_at = #{createdAt}, updated_at = #{updatedAt},
        enforcement_date = #{enforcementDate}, seq_code = #{seqCode}, approval_count = #{approvalCount}, doc_status = #{docStatus}, version = #{version}+1
        where approval_doc_id = #{approvalDocId} and version = #{version};
    </update>

    <!--문서수정 알람수신자 가져오기-->
    <select id="selectUpdateAlarmRecipient" parameterType="int" resultType="int">
        select org_user_id from approval
        where approval_doc_id = #{approvalDocId}
        and (approval_status = 'P' or approval_status = 'A');
    </select>

    <!--수신참조 삭제-->
    <delete id="deleteReceivedRef" parameterType="int">
        delete from received_ref
        where approval_doc_id = #{approvalDocId};
    </delete>

    <!--삭제할 결재문서의 작성자 확인-->
    <select id="selectUserIdByApprovalDoc" parameterType="int" resultType="int">
        select org_user_id from approval_doc
        where approval_doc_id = #{approvalDocId};
    </select>

    <!--결재문서 삭제하기-->
    <update id="deleteApprovalDoc" parameterType="int">
        update approval_doc set doc_del_status = 1
        where approval_doc_id = #{approvalDocId};
    </update>

    <!--결재라인리스트 조회하기-->
    <select id="selectApprovalUserIdByApprovalDocId" parameterType="int" resultType="ApprovalPermissionResDTO">
        select org_user_id, approval_status, approval_order from approval
        where approval_doc_id = #{approvalDocId};
    </select>

    <!--결재취소하기-->
    <update id="updateApprovalDocToCancel" parameterType="ApprovalCancelReqDTO">
        update approval_doc
        set doc_status = #{docStatus}, end_at = #{endAt}, product_num = null
        where approval_doc_id = #{approvalDocId};
    </update>

    <update id="updateApprovalToCancel" parameterType="ApprovalCancelReqDTO">
        update approval
        set approval_status = #{approvalStatus}, approval_date = #{approvalDate}, sign_file_id = null
        where approval_doc_id = #{approvalDocId} and org_user_id = #{orgUserId};
    </update>

    <select id="selectApprovalNextLine" parameterType="map" resultType="java.lang.Integer">
        select org_user_id from approval
        where approval_doc_id = #{approvalDocId} and approval_order = #{approvalOrder} + 1;
    </select>

    <update id="updateApprovalNextLine" parameterType="map">
        update approval
        set approval_status = 'W', receive_date = null
        where approval_doc_id = #{approvalDocId} and approval_order = #{approvalOrder} +1;
    </update>

    <select id="selectOrgUserIdFromApprovalDoc" parameterType="int" resultType="int">
        select org_user_id from approval_doc
        where approval_doc_id = #{approvalDocId};
    </select>

    <!--결재라인 첫 사람 문서상태 가져오기-->
    <select id="selectFirstApprovalStatus" parameterType="int">
        select approval_status from approval
        where approval_doc_id = #{approvalDocId} and approval_order = 1;
    </select>

    <!--결재라인 삭제하기-->
    <delete id="deleteApprovalLine" parameterType="map">
        <![CDATA[
        delete from approval
        where approval_doc_id = #{approvalDocId}
            and approval_order >= #{isUpdateOrder};
        ]]>
    </delete>

    <!--임시저장문서 수정하기-->
    <update id="updateTemporalApprovalDoc" parameterType="ApprovalDocReqDTO">
        update approval_doc
        set approval_doc_title = #{approvalDocTitle}, contents = #{contents}, enforcement_date = #{enforcementDate},
            seq_code = #{seqCode}, search_contents =#{searchContents}, approval_date = #{approvalDate}, org_user_id = #{orgUserId}
        where approval_doc_id = #{approvalDocId};
    </update>

    <!--파일 경로 저장-->
    <insert id="insertApprovalAttachment" parameterType="ApprovalAttachmentDTO">
        insert attatchment_file (file_name, approval_file_path, file_code, use_id, download_file_path)
            values (#{fileName}, #{approvalFilePath}, '03', #{approvalDocId} , #{downloadFilePath});
    </insert>

    <!--기본 결재라인 가져오기-->
    <select id="selectDefaultApprovalLine" parameterType="int" resultType="ApprovalLineDetailListDTO">
        select t1.org_user_id as user_id , user_name as user, t3.dept_id, t5.dept_name as department,
            t6.est_id, t3.est_name as establishment, t7.comp_id, t7.comp_name as company, t8.position_name as position,
            t9.grade_name as grade, line_order as approval_order
        from default_approval_line t1
            left join form t2
            on t1.form_code = t2.form_code
            left join organization_user t3
            on t1.org_user_id = t3.org_user_id
            left join user t4
            on t3.user_id = t4.user_id
            left join department t5
            on t3.dept_id = t5.dept_id
            left join establishment t6
            on t3.est_name = t6.est_name
            left join company t7
            on t3.comp_name = t7.comp_name
            left join position t8
            on t3.position_code = t8.position_code
            left join grade t9
            on t3.grade_code = t9.grade_code
        where t1.form_code = #{formCode}
        and t2.default_approval_line_status = 1;
    </select>

    <!--즐겨찾기-->
    <insert id="insertFavorites" parameterType="FavoritesReqDTO">
        insert into favorites (org_user_id, form_code)
            values(#{orgUserId}, #{formCode});
    </insert>

    <delete id="deleteFavorites" parameterType="FavoritesReqDTO">
        delete from favorites where form_code = #{formCode} and org_user_id = #{orgUserId};
    </delete>

    <select id="selectFavorites" parameterType="int" resultType="FavoritesResDTO">
        select t1.form_code, form_name
        from favorites t1
            left join form t2
            on t1.form_code = t2.form_code
        where org_user_id = #{orgUserId} and t2.form_del_status = 0 and t2.form_used_status =1;
    </select>

    <select id="selectFavoritesByFormCode" parameterType="FavoritesReqDTO" resultType="int">
        select count(*) from favorites where org_user_id = #{orgUserId} and form_code = #{formCode};
    </select>

    <!--해당 문서에 맞는 파일이름 가져오기-->
    <select id="selectFileNamesAndFilePath" parameterType="int" resultType="FileResDTO">
        select file_name, download_file_path from attatchment_file
        where use_id = #{approvalDocId} and file_code = '03';
    </select>

    <!--상신자 아이디랑 결재상태 가져오기-->
    <select id="selectApproverIdAndDocStatusByApprovalDoc" parameterType="int" resultType="ApprovalDocStatusDTO">
        select org_user_id, doc_status from approval_doc
        where approval_doc_id = #{approvalDocId};
    </select>

    <!--임시저장으로 바꾸기-->
    <update id="updateApprovalDocToTemporal">
        update approval_doc
        set doc_status = 'T'
        where approval_doc_id = #{approvalDocId};
    </update>

    <!--결재라인 모두 대기상태로 바꾸기-->
    <update id="updateApprovalLineToWait">
        update approval
        set approval_status = 'W', receive_date = null
        where approval_doc_id = #{approvalDocId};
    </update>

    <!--결재상태가 'A'인 결재라인리스트 가져오기-->
    <select id="selectApproverIdList" parameterType="int" resultType="int">
        <![CDATA[
            select org_user_id from approval where approval_doc_id = #{approvalDocId} and approval_status = 'A';
        ]]>
    </select>

    <!--결재라인 첫 사람 아이디가져오기-->
    <select id="selectFirstOrgUserIdFromApprovalLine" parameterType="int" resultType="int">
        select org_user_id from approval
        where approval_doc_id = #{approvalDocId} and approval_order = 1;
    </select>

    <!--결재라인 수정 시 지금 결재해야 할 사람이면 'P'로 바꿔주기-->
    <update id="updateApprovalStatusAndReceiveDate" parameterType="Map">
        update approval
        set approval_status = 'P' , receive_date = now()
        where approval_doc_id = #{approvalDocId} and approval_order = #{approvalOrder};
    </update>

    <!--해당 사용자가 결재안한 문서 리스트 가져오기-->
    <select id="selectAllUnApprovedDocList" parameterType="int" resultType="AllUnApprovedDocDTO">
        select t1.approval_doc_id , t2.version
        from approval t1
        left join approval_doc t2
        on t1.approval_doc_id = t2.approval_doc_id
        where t1.org_user_id = #{orgUserId} and approval_status = 'P' and t2.doc_del_status = 0;
    </select>

    <!-- searchContext 테이블에 파싱된 내용 넣기 -->
    <insert id="insertSearchContents" >
        insert into search_contents (approval_doc_id,approval_doc_title, contents)
        values(#{approvalDocId},#{approvalDocTitle}, #{parsedText});
    </insert>
    <update id="updateSearchContents">
        update search_contents
        set contents = #{parsedText}
        where approval_doc_id = #{approvalDocId}
    </update>

    <select id="selectFavoriteCount" parameterType="int">
        select count(*) from favorites where org_user_id = #{orgUserId};
    </select>

    <update id="updateProductNumintoSearchContents">
        UPDATE search_contents SET product_num = #{productNum} WHERE approval_doc_id = #{approvalDocId};
    </update>

</mapper>