<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitedu.bipa.simplesignbackend.mapper.FormManageMapper">
    <select id="getFormAndCompList" resultType="bitedu.bipa.simplesignbackend.model.dto.FormAndCompDTO">
        SELECT form_code AS id, comp_name, form_name, form_used_status AS status FROM form
        INNER JOIN company ON form.comp_id = company.comp_id
        <where>
            <if test="compId != 0">
                AND form.comp_id=#{compId}
            </if>
            AND form_name like CONCAT('%', #{formName}, '%') AND form_used_status=#{status} AND form_del_status=0;
        </where>
    </select>

    <select id="getFormDetail" resultType="bitedu.bipa.simplesignbackend.model.dto.FormDetailResDTO">
        SELECT form_code AS code, form_name AS formName, default_form AS defaultForm, main_form AS mainForm, form_used_status AS status, comp_id, NVL(form_explain, "") AS formExplain, default_approval_line_status AS approvalLineStatus, form_approval_kind AS approvalKind
        FROM form WHERE form_code=#{code};
    </select>

    <select id="getFormDetailScope" resultType="bitedu.bipa.simplesignbackend.model.dto.FormDetailScopeDTO">
        SELECT A.category, A.form_code, A.use_id, comp.comp_id, comp.comp_name AS company, est.est_id, NVL(est.est_name, "") AS establishment, dept.dept_id, NVL(dept.dept_name, "") AS department, user.user_id, NVL(user.user_name, "") AS user, NVL(user.grade_name, "") AS grade, NVL(user.position_name, "") AS position
        FROM (SELECT * FROM form_use_department WHERE form_code=#{code}) A
        LEFT JOIN (SELECT user.user_id, user.user_name, ou.dept_id, g.grade_name, p.position_name, ou.org_user_id FROM user
        INNER JOIN organization_user AS ou ON user.user_id=ou.user_id
        INNER JOIN grade AS g on ou.grade_code=g.grade_code
        INNER JOIN position AS p on ou.position_code=p.position_code) AS user ON A.category = 'U' AND A.use_id = user.org_user_id
        LEFT JOIN department AS dept ON A.category IN ('U', 'D') AND (A.use_id= dept.dept_id OR user.dept_id=dept.dept_id)
        LEFT JOIN establishment AS est ON A.category IN ('U', 'D', 'E') AND (A.use_id= est.est_id OR dept.est_id=est.est_id)
        LEFT JOIN company AS comp ON A.category IN ('U', 'D', 'E', 'C') AND (A.use_id= comp.comp_id OR est.comp_id=comp.comp_id);
    </select>

    <select id="selectFormListWithSearch" resultType="FormListDTO"
            parameterType="Map">
        select distinct  t1.form_code, form_name, form_explain
        from form t1
            left join
            form_use_department t2 on t1.form_code = t2.form_code
        where ((t2. category = 'U' and use_id = #{belong.userId})
            or (t2.category = 'D' and use_id = #{belong.deptId})
            or (t2.category = 'E' and use_id = #{belong.estId})
            or (t2.category = 'C' and use_id =#{belong.compId}))
            and t1.form_used_status = 1
            and t1.form_del_status = 0
            and form_name like concat('%',#{searchContent},'%');
    </select>

    <select id="selectSequence" resultType="SequenceListDTO" parameterType="Map">
        select distinct t1.seq_code, seq_name as name
        from sequence t1
            left join
            sequence_use_form t2 on t1.seq_code = t2.seq_code
            left join
            sequence_use_department t3 on t3.seq_code = t2.seq_code
        where form_code =#{formCode}
        and ((t3. status = 'U' and use_id = #{belong.userId})
        or (t3.status = 'D' and use_id = #{belong.deptId})
        or (t3.status = 'E' and use_id = #{belong.estId})
        or (t3.status = 'C' and use_id =#{belong.compId}));
    </select>

    <select id="getFormItemList" resultType="bitedu.bipa.simplesignbackend.model.dto.FormItemDTO" >
        select form_list_code, form_list_name, form_list_tag from form_list
    </select>

    <insert id="createFormDetail" >
        INSERT INTO form(comp_id, form_name, default_form, main_form, form_used_status, form_explain, default_approval_line_status, form_approval_kind)
        VALUES(#{compId}, #{formName}, #{defaultForm}, #{mainForm}, #{status}, #{formExplain}, #{approvalLineStatus}, #{approvalKind});
    </insert>

    <insert id="createFormScope" parameterType="map">
        INSERT INTO form_use_department(category, form_code, use_id) VALUES(#{category}, #{formCode}, #{useId});
    </insert>

    <update id="updateFormDetail" >
        UPDATE form
        SET form_name = #{formName},
        default_form = #{defaultForm},
        main_form = #{mainForm},
        form_used_status = #{status},
        form_explain = #{formExplain},
        default_approval_line_status=#{approvalLineStatus},
        form_approval_kind=#{approvalKind}
        WHERE form_code = #{code}
    </update>

    <delete id="delFormScope" parameterType="map">
        delete from form_use_department
        where category=#{category} and form_code = #{formCode} and use_id = #{useId}
    </delete>

    <insert id="insertIgnoreFormScope" parameterType="map">
        INSERT IGNORE INTO form_use_department(category, form_code, use_id)
        VALUES(#{category}, #{formCode}, #{useId});
    </insert>

    <update id="deleteForm">
        UPDATE form SET form_del_status=1 WHERE form_code = #{code}
    </update>

    <select id="selectFormListAll">
        select form_code AS id, form_name from form;
    </select>

    <select id="selectDefaultApprovalLine">
        SELECT dl.line_order, dl.org_user_id, comp.comp_id, ou.comp_name, est.est_id, est.est_name, ou.user_id, ou.dept_id, dept.dept_name, u.user_name, grade.grade_code, position.position_code, grade.grade_name, position.position_name
        FROM (SELECT * FROM default_approval_line WHERE form_code=#{code}) AS dl
        INNER JOIN organization_user AS ou ON dl.org_user_id=ou.org_user_id
        INNER JOIN department AS dept ON ou.dept_id=dept.dept_id
        INNER JOIN establishment AS est ON dept.est_id=est.est_id
        INNER JOIN company AS comp ON comp.comp_id=est.comp_id
        INNER JOIN user AS u ON u.user_id=ou.user_id
        INNER JOIN position on ou.position_code=position.position_code
        INNER JOIN grade on grade.grade_code=ou.grade_code
        ORDER BY dl.line_order;
    </select>

    <insert id="createDefaultApprovalLine" parameterType="map">
        insert into
        default_approval_line(form_code, org_user_id, line_order)
        values(#{formCode}, #{userId}, #{lineOrder});
    </insert>

    <delete id="delDefaultLine" parameterType="map">
        DELETE FROM default_approval_line
        WHERE form_code=#{formCode} AND org_user_id = #{userId};
    </delete>

    <insert id="insertIgnoreDefaultLine" parameterType="map">
        INSERT IGNORE INTO
        default_approval_line(form_code, org_user_id, line_order)
        VALUES(#{formCode}, #{userId}, #{lineOrder});
    </insert>

</mapper>